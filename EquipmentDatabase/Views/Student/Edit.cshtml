@model EquipmentDatabase.Models.Student

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentID)

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">Equipment ID</th>
                            <th scope="col">Equipment Type</th>
                            <th scope="col">Model</th>
                            <th scope="col">Date Purchased</th>
                            <th scope="col">Date Assigned</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Equipment.Any<EquipmentDatabase.Models.Equipment>())
                        {

                            foreach (var item in Model.Equipment)
                            {
                                <tr>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.EquipmentID)</th>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.EquipmentType)</th>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.ModelName)</th>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.DatePurchased)</th>
                                    <th scope="row">@Html.DisplayFor(modelItem => item.DateAssigned)</th>
                                    <th scope="row">
                                        @Html.ActionLink("Edit", "Edit", "Equipment", new { id = item.EquipmentID },
                                        htmlAttributes: new { @class = "btn btn-primary" })
                                    </th>
                                    <th scope="row">
                                        @Html.ActionLink("Unassign", "Unassign", new { equipmentID = item.EquipmentID, studentID = item.StudentID },
                                        htmlAttributes: new { @class = "btn btn-primary" })
                                    </th>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Assign Equipment", "Select", "Equipment", new { StudentID = @Model.StudentID }, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
        </div>

    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
