@model EquipmentDatabase.Models.Equipment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Equipment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EquipmentID)


        <div class="form-group">
            @Html.LabelFor(model => model.DatePurchased, "Date Purchased", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatePurchased, "", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatePurchased, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateAssigned, "Date Assigned", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAssigned, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAssigned, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EquipmentType, "Equipment Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EquipmentType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EquipmentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelName, "Model Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTag, "Service Tag", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Software, "Software", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Software, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Software, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, "Notes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">

            <label class="control-label col-md-2" for="student-assigned">
                Student Assigned?
            </label>
            <div class="col-md-10">
                <input type="checkbox" id="student-assigned" value="StudentAssigned" />

            </div>

        </div>

        <div class="form-group" hidden id="student-selector">
            @Html.LabelFor(model => model.StudentID, "Student ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
      
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">

            <h3>Equipment</h3>

            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Student ID</th>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Date</th>
                        <th scope="col">Details</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Transaction.Any<EquipmentDatabase.Models.Transaction>())
                {

                    foreach (var item in Model.Transaction)
                    {
                            <tr>
                                <th scope="row">@Html.DisplayFor(modelItem => item.StudentID)</th>
                                <th scope="row">@Html.DisplayFor(modelItem => item.Student.FirstMidName)</th>
                                <th scope="row">@Html.DisplayFor(modelItem => item.Student.LastName)</th>
                                <th scope="row">@Html.DisplayFor(modelItem => item.TransactionDate)</th>
                                <th scope="row">@Html.DisplayFor(modelItem => item.TransactionType)</th>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    $(document).ready(function () {
        if ($('input#StudentID').val() !== "") {
            $('#student-selector').show();
            $('#student-assigned').prop('checked', true);
        }
    });

    $('#student-assigned').change(function () {
        if ($(this).is(':checked')) {
            $('#student-selector').show();
        }
        else {
            $('#student-selector').hide();
            $('input#StudentID').val("");
        }
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
