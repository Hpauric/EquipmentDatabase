@model IEnumerable<EquipmentDatabase.Models.Equipment>

@{
    ViewBag.Title = "Index";
}



<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.2.1/css/responsive.dataTables.min.css">

<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.js"></script>

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/responsive/2.2.1/js/dataTables.responsive.min.js"></script>



<script type='text/javascript'>
    $(document).ready(function () {
        
            
        
        $('#table-id').DataTable({
            "initComplete": function (settings, json) {

                preloaderFadeOutTime = 500;
                function hidePreloader() {
                    var preloader = $('.spinner-wrapper');
                    preloader.fadeOut(preloaderFadeOutTime);
                }
                hidePreloader();
                $('#table-id').show();
            },
            "pageLength": 50,
            responsive: {
                details: {
                    type: 'column',
                    target: '.extend-button'
                }
            },
            "columns": [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false },
                { "orderable": false }
            ]
        });
    });
</script>

<div class="spinner-wrapper">
    <div class="spinner">
        <div class="dot1"></div>
        <div class="dot2"></div>
    </div>
</div>



<h2>Equipment List</h2>

<p>
    @Html.ActionLink("Add Equipment", "Create", "", htmlAttributes: new { @class = "btn btn-primary" })
    @Html.ActionLink("Add Shipment", "BulkCreate", "", htmlAttributes: new { @class = "btn btn-primary" })

</p>
<table id="table-id" class="display nowrap" cellspacing="0" width="100%" hidden>
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>

                @* @Html.DisplayNameFor(model => model.EquipmentType) *@

                Equipment Type

            </th>
            <th>
                Student ID
            </th>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.DateAssigned) *@
                Date Purchased

            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.DateAssigned) *@
                Date Assigned

            </th>

            <th></th>
            <th></th>
            <th></th>
            <th class="none">Model</th>
            <th class="none">Location</th>
            <th class="none">Status</th>
            <th class="none">Service Tag</th>
            <th class="none">Software</th>
            <th class="none">Notes</th>

        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EquipmentID)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EquipmentType)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.StudentID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.LastName)
                </td>

                <td>
                    @item.DatePurchased.ToString("MM/dd/yyyy")
                </td>

                <td>

                    @if (item.DateAssigned.HasValue)
                {
                        @item.DateAssigned.Value.ToString("MM/dd/yyyy")
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.EquipmentID }, htmlAttributes: new { @class = "btn btn-primary" })
                </td>
                <td>
                    @*@Html.ActionLink("Details", "Details", new { id = item.EquipmentID }, htmlAttributes: new { @class = "btn btn-primary extend-button" })*@
                    <button class="extend-button btn btn-primary">Details</button>
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id = item.EquipmentID }, htmlAttributes: new { @class = "btn btn-primary" })
                </td>

                <td class="none">
                   @Html.DisplayFor(modelItem => item.ModelName)
                </td>
                <td class="none">
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td class="none">
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td class="none">
                    @Html.DisplayFor(modelItem => item.ServiceTag)
                </td>
                <td class="none">
                    @Html.DisplayFor(modelItem => item.Software)
                </td>
                <td class="none">
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>



            </tr>
        }
    </tbody>
</table>
